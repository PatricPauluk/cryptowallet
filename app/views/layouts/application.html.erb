<!DOCTYPE html>
<html>
  <head>
    <title>Cryptowallet</title>
    <%= csrf_meta_tags %>
    <%= csp_meta_tag %>

    <%# Inicialmente em um projeto, os assets de Javascript e CSS são todos carregados cada vez que uma página é acessada,
    o que é desnecessário. Para termos um controle maior do que precisamos carregar por página e isolar o que não precisamos,
    foi removido a linha require_tree dos seguintes arquivos: app/assets/javascripts/application.js
                                                              app/assets/stylesheets/application.css
    
    Pois esta linha (que contém require_tree) carregava todos os arquivos que se encontram nessa mesma pasta, ou seja,
    carregava todos os arquivos das pastas: app/assets/javascripts/
                                            app/assets/stylesheets/

    A princípio, remover essa linha vai deixar o projeto "feio" já que removemos o esqueleto e estilo da página.
    Agora, para seguirmos com o plano de carregar apenas o necessário, utilizamos o valor em parâmetro do controller, como abaixo: %>

    <%= stylesheet_link_tag    'application', media: 'all', 'data-turbolinks-track': 'reload' %>
    <%= stylesheet_link_tag    'scaffolds', media: 'all', 'data-turbolinks-track': 'reload' %> <%# Melhora a aparência da página após carregar o scaffolds %>
    <%= stylesheet_link_tag    params[:controller], media: 'all', 'data-turbolinks-track': 'reload' %> <%# Carrega os assets de CSS %>

    <%= javascript_include_tag 'application', 'data-turbolinks-track': 'reload' %>
    <%= javascript_include_tag params[:controller], 'data-turbolinks-track': 'reload' %> <%# Carrega os assets de JS %>

    <%# Foi apagado os arquivos notify.js e jquery.js que estavam em vendor/assets/javascripts, então o código abaixo não funciona mais.
    Foi utilizado o Rails Assets para as instalações, que transforma a biblioteca Javascript em uma GEM, porém foi removido por ser obsoleto.
    A forma indicada para trabalhar com o Javascript seria utilizando o yarn.
    javascript_include_tag 'jquery', 'data-turbolinks-track': 'reload' %> <%# busca de vendor/assets/javascripts | não mais escrito dessa forma
    javascript_include_tag 'notify', 'data-turbolinks-track': 'reload' %> <%# busca de vendor/assets/javascripts | não mais escrito dessa forma %>

    <%# params[:controller] consegue indicar por qual controller a requisição passou, então aproveitamos ele para isolar os assets.
    Porém, apenas colocando o código acima não vai funcionar, vai causar o seguinte erro:
    Sprockets::Rails::Helper::AssetNotPrecompiledError in Welcome#index

    Apenas os arquvos application.js e application.css eram capazes de ler os arquivos dentro da sua pasta, através do require_tree.
    Para corrigirmos isso, devemos ir no arquivo: config/initializers/assets.rb e adicionar o asset a ser carregado.
    Por exemplo, adicionar o código: Rails.application.config.assets.precompile += %w( welcome.css )

    Como pode ver na pasta, devem ser inseridos tanto os arquivos .css como os .js
    Após fazer as alterações, reiniciar o servidor. É para estar funcionando corretamente. %>
  </head>

  <body>
    <h1>Cabeçalho Falso</h1>
    <%# yield é responsável por renderizar o conteúdo das views %>
    <%= yield %>
    <p>A requisição passou pelo controller: <%= params[:controller] %></p>
    <h1>Rodapé Falso</h1>
    <script>$.notify("Notify.js funcionando junto de jQuery.js", "success")</script>
  </body>
</html>
